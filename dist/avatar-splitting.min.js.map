{"version":3,"file":"avatar-splitting.min.js","sources":["../src/index.js"],"sourcesContent":["export default function avatar(options) {\n    let image = options.image;\n    let maskImage = options.maskImage;\n    let vertical = false;\n    if (!image) {\n        console.error('Image cannot be empty!');\n        return;\n    } else if (typeof image != 'string') {\n        console.error('Image must be a string type!');\n        return;\n    }\n    if (maskImage != '' && typeof maskImage != 'undefined') {\n        if (typeof maskImage != 'string') {\n            console.error('maskImage must be a string type!');\n            return;\n        } else {\n            vertical = true;\n        }\n    } else {\n        vertical = false;\n    }\n    let option = extend({\n        exportType : 'base64',\n        success(){},\n        error(){},\n    }, options);\n    let maskImg = new Image;\n    maskImg.crossOrigin = '*';\n\n    maskImg.onload = function () {\n        let maskCanvas = document.createElement('canvas'),\n            maskCtx = maskCanvas.getContext('2d');\n        maskCanvas.width = maskImg.width;\n        maskCanvas.height = `${vertical ? maskImg.height  : maskImg.height / 2} `;\n        maskCtx.drawImage(maskImg, 0, `${vertical ? 0 : maskCanvas.height}`, maskImg.width, maskCanvas.height, 0, 0, maskImg.width, maskCanvas.height);\n        let maskImageData = maskCtx.getImageData(0, 0, maskCanvas.width, maskCanvas.height);\n\n        let originImg = new Image;\n        originImg.crossOrigin = '*';\n\n        originImg.onload = function () {\n            let originCanvas = document.createElement('canvas'),\n                originCtx = originCanvas.getContext('2d');\n            originCanvas.width = `${vertical ? maskImg.width : originImg.width}`;\n            originCanvas.height = `${vertical ? maskCanvas.height : originImg.height/2}`;\n            originCtx.drawImage(originImg, 0, 0,originImg.width, `${vertical ? originImg.height : originImg.height / 2}`, 0, 0, `${vertical ? maskImg.width : originImg.width}`, `${vertical ? maskImg.height : originImg.height / 2}`);\n            let originImgData = originCtx.getImageData(0, 0, originCanvas.width, originCanvas.height),\n                resultBase64 = get_alpha_image(originImgData, maskImageData, option);\n            option.success(resultBase64);\n        };\n\n        originImg.src = image + '?' + new Date().getTime();\n\n        originImg.onerror = () => {\n            option.error({code:0,msg:'load image error'});\n        };\n    };\n\n    maskImg.src = `${vertical ? maskImage : image}` + '?' + new Date().getTime();\n\n    maskImg.onerror = () => {\n        option.error({code:0,msg:'load image error'});\n    };\n}\n\nfunction extend(opt1, opt2) {\n    for (let i in opt2) {\n        if (opt2.hasOwnProperty(i)) {\n            if (typeof opt2[i] == 'object') {\n                if (typeof opt1[i] !== 'object' || opt1[i] === null) {\n                    opt1[i] = {};\n                }\n                extend(opt1[i], opt2[i]);\n            } else {\n                opt1[i] = opt2[i];\n            }\n        }\n    }\n    return opt1;\n}\n\nfunction get_alpha_image(srcImage, maskImage, option) {\n    let canvas = document.createElement('canvas'),\n        result = canvas.getContext('2d').createImageData(srcImage);\n    let size = srcImage.width * srcImage.height * 4,\n        MT_RED = 0,\n        MT_GREEN = 1,\n        MT_BLUE = 2,\n        MT_ALPHA = 3;\n\n    for (var i = 0; i < size; i += 4) {\n        result.data[i + MT_RED] = srcImage.data[MT_RED + i];\n        result.data[i + MT_GREEN] = srcImage.data[MT_GREEN + i];\n        result.data[i + MT_BLUE] = srcImage.data[MT_BLUE + i];\n        result.data[i + MT_ALPHA] = maskImage.data[i];\n    }\n\n    let resultCanvas = document.createElement('canvas'),\n        resultCtx = resultCanvas.getContext('2d');\n    resultCanvas.width = result.width;\n    resultCanvas.height = result.height;\n    resultCtx.putImageData(result, 0, 0, 0, 0, resultCanvas.width, resultCanvas.height);\n\n    if (option.exportType == 'canvas') {\n        return resultCanvas;\n    } else {\n        return resultCanvas.toDataURL('image/png');\n    }\n}"],"names":["avatar","options","image","maskImage","vertical","error","option","extend","maskImg","Image","crossOrigin","onload","maskCanvas","document","createElement","maskCtx","getContext","width","height","drawImage","maskImageData","getImageData","originImg","originCanvas","originCtx","originImgData","resultBase64","get_alpha_image","success","src","Date","getTime","onerror","code","msg","opt1","opt2","i","hasOwnProperty","_typeof","srcImage","canvas","result","createImageData","size","data","resultCanvas","resultCtx","putImageData","exportType","toDataURL"],"mappings":"oMAAe,SAASA,GAAOC,MACvBC,GAAQD,EAAQC,MAChBC,EAAYF,EAAQE,UACpBC,GAAW,MACVF,sBACOG,MAAM,yBAEX,IAAoB,gBAATH,uBACNG,MAAM,mCAGD,IAAbF,OAAuC,KAAbA,EAA0B,IAC5B,gBAAbA,uBACCE,MAAM,uCAGH,UAGJ,KAEXC,GAASC,cACI,kDAGdN,GACCO,EAAU,GAAIC,SACVC,YAAc,MAEdC,OAAS,cACTC,GAAaC,SAASC,cAAc,UACpCC,EAAUH,EAAWI,WAAW,QACzBC,MAAQT,EAAQS,QAChBC,QAAYd,EAAWI,EAAQU,OAAUV,EAAQU,OAAS,SAC7DC,UAAUX,EAAS,MAAMJ,EAAW,EAAIQ,EAAWM,QAAUV,EAAQS,MAAOL,EAAWM,OAAQ,EAAG,EAAGV,EAAQS,MAAOL,EAAWM,WACnIE,GAAgBL,EAAQM,aAAa,EAAG,EAAGT,EAAWK,MAAOL,EAAWM,QAExEI,EAAY,GAAIb,SACVC,YAAc,MAEdC,OAAS,cACXY,GAAeV,SAASC,cAAc,UACtCU,EAAYD,EAAaP,WAAW,QAC3BC,UAAWb,EAAWI,EAAQS,MAAQK,EAAUL,SAChDC,WAAYd,EAAWQ,EAAWM,OAASI,EAAUJ,OAAO,KAC/DC,UAAUG,EAAW,EAAG,EAAEA,EAAUL,UAAUb,EAAWkB,EAAUJ,OAASI,EAAUJ,OAAS,GAAK,EAAG,MAAMd,EAAWI,EAAQS,MAAQK,EAAUL,WAAYb,EAAWI,EAAQU,OAASI,EAAUJ,OAAS,OACnNO,GAAgBD,EAAUH,aAAa,EAAG,EAAGE,EAAaN,MAAOM,EAAaL,QAC9EQ,EAAeC,EAAgBF,EAAeL,EAAed,KAC1DsB,QAAQF,MAGTG,IAAM3B,EAAQ,KAAM,GAAI4B,OAAOC,YAE/BC,QAAU,aACT3B,OAAO4B,KAAK,EAAEC,IAAI,yBAIzBL,KAASzB,EAAWD,EAAYD,GAAU,KAAM,GAAI4B,OAAOC,YAE3DC,QAAU,aACP3B,OAAO4B,KAAK,EAAEC,IAAI,sBAIjC,QAAS3B,GAAO4B,EAAMC,OACb,GAAIC,KAAKD,GACNA,EAAKE,eAAeD,KACE,UAAlBE,EAAOH,EAAKC,KACW,WAAnBE,EAAOJ,EAAKE,KAA+B,OAAZF,EAAKE,OAC/BA,SAEFF,EAAKE,GAAID,EAAKC,OAEhBA,GAAKD,EAAKC,UAIpBF,GAGX,QAASR,GAAgBa,EAAUrC,EAAWG,OASrC,GARDmC,GAAS5B,SAASC,cAAc,UAChC4B,EAASD,EAAOzB,WAAW,MAAM2B,gBAAgBH,GACjDI,EAAOJ,EAASvB,MAAQuB,EAAStB,OAAS,EAMrCmB,EAAI,EAAGA,EAAIO,EAAMP,GAAK,IACpBQ,KAAKR,EANH,GAMiBG,EAASK,KAN1B,EAMwCR,KAC1CQ,KAAKR,EAND,GAMiBG,EAASK,KAN1B,EAM0CR,KAC9CQ,KAAKR,EANF,GAMiBG,EAASK,KAN1B,EAMyCR,KAC5CQ,KAAKR,EAND,GAMiBlC,EAAU0C,KAAKR,MAG3CS,GAAejC,SAASC,cAAc,UACtCiC,EAAYD,EAAa9B,WAAW,eAC3BC,MAAQyB,EAAOzB,QACfC,OAASwB,EAAOxB,SACnB8B,aAAaN,EAAQ,EAAG,EAAG,EAAG,EAAGI,EAAa7B,MAAO6B,EAAa5B,QAEnD,UAArBZ,EAAO2C,WACAH,EAEAA,EAAaI,UAAU"}